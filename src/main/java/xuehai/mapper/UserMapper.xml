<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="xuehai.dao.UserMapper">
  <resultMap id="BaseResultMap" type="xuehai.model.User">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="authority" jdbcType="SMALLINT" property="authority" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="modified_time" jdbcType="TIMESTAMP" property="modifiedTime" />
    <result column="sex" jdbcType="TINYINT" property="sex" />
    <result column="profile" jdbcType="VARCHAR" property="profile" />
    <result column="school" jdbcType="VARCHAR" property="school" />
    <result column="major" jdbcType="VARCHAR" property="major" />
  </resultMap>
  <sql id="Base_Column_List">
    id, username, password, salt, email, authority, time, modified_time, sex, profile, 
    school, major
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="xuehai.model.User">
    insert into user (id, username, password, 
      salt, email, authority, 
      time, modified_time, sex, 
      profile, school, major
      )
    values (#{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{salt,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{authority,jdbcType=SMALLINT}, 
      #{time,jdbcType=TIMESTAMP}, #{modifiedTime,jdbcType=TIMESTAMP}, #{sex,jdbcType=TINYINT}, 
      #{profile,jdbcType=VARCHAR}, #{school,jdbcType=VARCHAR}, #{major,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="xuehai.model.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="salt != null">
        salt,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="authority != null">
        authority,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="modifiedTime != null">
        modified_time,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="profile != null">
        profile,
      </if>
      <if test="school != null">
        school,
      </if>
      <if test="major != null">
        major,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="authority != null">
        #{authority,jdbcType=SMALLINT},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedTime != null">
        #{modifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=TINYINT},
      </if>
      <if test="profile != null">
        #{profile,jdbcType=VARCHAR},
      </if>
      <if test="school != null">
        #{school,jdbcType=VARCHAR},
      </if>
      <if test="major != null">
        #{major,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="xuehai.model.User">
    update user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="authority != null">
        authority = #{authority,jdbcType=SMALLINT},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedTime != null">
        modified_time = #{modifiedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=TINYINT},
      </if>
      <if test="profile != null">
        profile = #{profile,jdbcType=VARCHAR},
      </if>
      <if test="school != null">
        school = #{school,jdbcType=VARCHAR},
      </if>
      <if test="major != null">
        major = #{major,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="xuehai.model.User">
    update user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      authority = #{authority,jdbcType=SMALLINT},
      time = #{time,jdbcType=TIMESTAMP},
      modified_time = #{modifiedTime,jdbcType=TIMESTAMP},
      sex = #{sex,jdbcType=TINYINT},
      profile = #{profile,jdbcType=VARCHAR},
      school = #{school,jdbcType=VARCHAR},
      major = #{major,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <insert id="regist" parameterType="xuehai.model.User" >
    <selectKey resultType="java.lang.Long" order="AFTER" keyProperty="id">
      SELECT  LAST_INSERT_ID() AS id
    </selectKey>
    insert into user (username, password,
      salt, email, authority,
      time, modified_time, sex,
      profile, school, major
      )
    values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
      #{salt,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{authority,jdbcType=SMALLINT},
      #{time,jdbcType=TIMESTAMP}, #{modifiedTime,jdbcType=TIMESTAMP}, #{sex,jdbcType=TINYINT},
      #{profile,jdbcType=VARCHAR}, #{school,jdbcType=VARCHAR}, #{major,jdbcType=VARCHAR}
      )
  </insert>


</mapper>